// tensor_test.v

// Generated using ACDS version 21.1 169

`timescale 1 ps / 1 ps
module tensor_test (
		input  wire        clk,                //                clk.clk
		input  wire [1:0]  feed_sel,           //           feed_sel.feed_sel
		input  wire        load_bb_one,        //        load_bb_one.load_bb_one
		input  wire        load_bb_two,        //        load_bb_two.load_bb_two
		input  wire        load_buf_sel,       //       load_buf_sel.load_buf_sel
		input  wire [7:0]  data_in_1,          //          data_in_1.data_in
		input  wire [7:0]  data_in_2,          //          data_in_2.data_in
		input  wire [7:0]  data_in_3,          //          data_in_3.data_in
		input  wire [7:0]  data_in_4,          //          data_in_4.data_in
		input  wire [7:0]  data_in_5,          //          data_in_5.data_in
		input  wire [7:0]  data_in_6,          //          data_in_6.data_in
		input  wire [7:0]  data_in_7,          //          data_in_7.data_in
		input  wire [7:0]  data_in_8,          //          data_in_8.data_in
		input  wire [7:0]  data_in_9,          //          data_in_9.data_in
		input  wire [7:0]  data_in_10,         //         data_in_10.data_in
		input  wire [7:0]  side_in_1,          //          side_in_1.data_in
		input  wire [7:0]  side_in_2,          //          side_in_2.data_in
		output wire [79:0] cascade_weight_out, // cascade_weight_out.cascade_weight_out
		output wire [24:0] int25_col_1,        //        int25_col_1.result_l
		output wire [24:0] int25_col_2,        //        int25_col_2.result_l,result_h
		output wire [24:0] int25_col_3         //        int25_col_3.result_h
	);

	tensor_test_dsp_prime_10_qbfmubi dsp_prime_0 (
		.clk                (clk),                //   input,   width = 1,                clk.clk
		.feed_sel           (feed_sel),           //   input,   width = 2,           feed_sel.feed_sel
		.load_bb_one        (load_bb_one),        //   input,   width = 1,        load_bb_one.load_bb_one
		.load_bb_two        (load_bb_two),        //   input,   width = 1,        load_bb_two.load_bb_two
		.load_buf_sel       (load_buf_sel),       //   input,   width = 1,       load_buf_sel.load_buf_sel
		.data_in_1          (data_in_1),          //   input,   width = 8,          data_in_1.data_in
		.data_in_2          (data_in_2),          //   input,   width = 8,          data_in_2.data_in
		.data_in_3          (data_in_3),          //   input,   width = 8,          data_in_3.data_in
		.data_in_4          (data_in_4),          //   input,   width = 8,          data_in_4.data_in
		.data_in_5          (data_in_5),          //   input,   width = 8,          data_in_5.data_in
		.data_in_6          (data_in_6),          //   input,   width = 8,          data_in_6.data_in
		.data_in_7          (data_in_7),          //   input,   width = 8,          data_in_7.data_in
		.data_in_8          (data_in_8),          //   input,   width = 8,          data_in_8.data_in
		.data_in_9          (data_in_9),          //   input,   width = 8,          data_in_9.data_in
		.data_in_10         (data_in_10),         //   input,   width = 8,         data_in_10.data_in
		.side_in_1          (side_in_1),          //   input,   width = 8,          side_in_1.data_in
		.side_in_2          (side_in_2),          //   input,   width = 8,          side_in_2.data_in
		.cascade_weight_out (cascade_weight_out), //  output,  width = 80, cascade_weight_out.cascade_weight_out
		.int25_col_1        (int25_col_1),        //  output,  width = 25,        int25_col_1.result_l
		.int25_col_2        (int25_col_2),        //  output,  width = 25,        int25_col_2.result_l,result_h
		.int25_col_3        (int25_col_3)         //  output,  width = 25,        int25_col_3.result_h
	);

endmodule
